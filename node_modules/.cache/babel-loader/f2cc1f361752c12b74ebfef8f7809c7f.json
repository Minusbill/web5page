{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mx-auto mt-10 sm:mt-20\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Project header \"), _createVNode($setup[\"ProjectHeader\"], {\n    singleProjectHeader: $setup.singleProjectHeader\n  }), _createCommentVNode(\" Project gallery \"), _createCommentVNode(\"    <ProjectGallery :projectImages=\\\"projectImages\\\" />\"), _createCommentVNode(\" Project information \"), _createVNode($setup[\"ProjectInfo\"], {\n    projectInfo: $setup.projectInfo\n  }), _createCommentVNode(\" Project related projects \"), _createVNode($setup[\"ProjectRelatedProjects\"], {\n    relatedProject: $setup.relatedProject\n  })]);\n}","map":{"version":3,"mappings":";;EAmIOA,KAAK,EAAC;AAAkC;;uBAA7CC,oBAYM,OAZNC,UAYM,GAXJC,uCAAuB,EACvBC,aAA4DC;IAA5CC,mBAAmB,EAAED;EAAmB,IAExDF,wCAAwB,EACxBA,8EAA4D,EAE5DA,4CAA4B,EAC5BC,aAA0CC;IAA5BE,WAAW,EAAEF;EAAW,IAEtCF,iDAAiC,EACjCC,aAA2DC;IAAlCG,cAAc,EAAEH;EAAc","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","singleProjectHeader","projectInfo","relatedProject"],"sourceRoot":"","sources":["/Users/bill/mygit/web5page/src/views/insc/ATOMNode.vue"],"sourcesContent":["<script setup>\nimport { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\n\nconst singleProjectHeader = {\n  singleProjectTitle: ' ATOM 节点 武装强化',\n  singleProjectDate: 'Nov 10,  2023',\n  singleProjectTag: 'Atom / CLI  ',\n};\n\nconst projectInfo = {\n  clientHeading: '  Dmint ',\n  companyInfos: [\n    { id: 1, title: '推特@0xFatDog', details: 'https://twitter.com/0xFatDog/',link:'https://twitter.com/0xFatDog/' },\n    { id: 2, title: 'Next Dao 节点教程', details: 'https://github.com/Next-DAO/atomicals-electrumx-docke'\n    ,link:'https://github.com/Next-DAO/atomicals-electrumx-docke'},\n],\n  objectivesHeading: 'ATOM 节点的选择',\n  objectivesDetails: ' 1 、默认官方 2 、切换第三方 3 、自建节点',\n  technologies: [\n    {\n      title: '',\n      techs: [],\n    },\n  ],\n  projectDetailsHeading: 'Challenge',\n  projectDetails: [\n    {\n      id: 1,\n      header: \"RPC 节点是什么？\",\n      details: '当我们需要获取一些链上或者索引数据时，需要通过向某个网络地址发送请求，这个地址就是节点。大部分情况下我们用的是官方节点，但当同时使用的人数过多的时候，可能会造成官方节点瘫痪，大家都没得用了。这个时候就需要一些第三方节点。',\n    },\n    {\n      id: 2,\n      header: \"目前已知的3个节点分别是：\",\n      details: '1.由\\n' +\n          '@atomicalsxyz\\n' +\n          ' 官方提供的https://ep.atomicals.xyz'\n    },\n    {\n      id: 3,\n      details: '2.由\\n' +\n          '@atomicalsmarket\\n' +\n          ' 提供的 https://ep.atomicalmarket.com'\n    },\n    {\n      id: 4,\n      details: '3.由 \\n' +\n          '@theNextDAO\\n' +\n          ' 提供的 https://ep.nextdao.xyz'\n    },\n    {\n      id: 4,\n      header: \"—————— 自建节点 ——————\",\n      details: '使用Next Dao 教程 https://github.com/Next-DAO/atomicals-electrumx-docker#atomicals-electrumx-docker'\n    }, {\n      id: 4,\n      header: \"1. 更新您的比特币全节点 RPC 设置，如果已设置，请跳过。\",\n      details: ' 将其添加到您的 bitcoin.conf 中，然后重新启动您的比特币完整节点。需等待节点重新索引。',\n      img: require('@/assets/btc/atomrpc.png'),\n\n    }, {\n      id: 4,\n      details: '或者 手工生成 rpcauth 使用 ：https://github.com/bitcoin/bitcoin/blob/master/share/rpcauth/rpcauth.py '\n    },\n    {\n      id: 5,\n      header: \"2. 克隆此存储库并运行服务器\",\n      details: 'git clone https://github.com/lucky2077/atomicals-electrumx-docker.git ',\n    },\n    {\n      id: 5,\n      details: '创建一个 .env 文件，内容如下： DAEMON_URL=electrumx:electrumx@192.168.50.2:8332 // 你的局域网 IP'\n\n    },\n    {\n      id: 6,\n      details: '然后运行 ​​ElectrumX 服务器：docker-compose pull && docker-compose up -d '\n    },\n    {\n      id: 7,\n      header: \"如对教程疑问 或者 详情，请看官方链接\",\n      details: 'https://github.com/Next-DAO/atomicals-electrumx-docker',\n    },\n  ],\n  socialSharingsHeading: '',\n  socialSharings: [\n\n  ],\n};\n\nconst relatedProject = {\n  relatedProjectsHeading: 'Related Projects',\n  relatedProjects: [\n    {\n      id: 1,\n      title: 'Mobile UI',\n      img: require('@/assets/images/starknet.jpg'),\n    },\n    {\n      id: 2,\n      title: 'Web Application',\n      img: require('@/assets/images/raas.jpg'),\n    },\n    {\n      id: 3,\n      title: 'UI Design',\n      img: require('@/assets/images/sui.jpg'),\n    },\n    {\n      id: 4,\n      title: 'Kabul Mobile App UI',\n      img: require('@/assets/images/mev.jpg'),\n    },\n  ],\n};\n\n\nonMounted(() => {\n  feather.replace();\n});\n\nonUpdated(() => {\n  feather.replace();\n});\n</script>\n\n<template>\n  <div class=\"container mx-auto mt-10 sm:mt-20\">\n    <!-- Project header -->\n    <ProjectHeader :singleProjectHeader=\"singleProjectHeader\" />\n\n    <!-- Project gallery -->\n    <!--    <ProjectGallery :projectImages=\"projectImages\" />-->\n\n    <!-- Project information -->\n    <ProjectInfo :projectInfo=\"projectInfo\" />\n\n    <!-- Project related projects -->\n    <ProjectRelatedProjects :relatedProject=\"relatedProject\" />\n  </div>\n</template>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}
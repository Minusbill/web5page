{"ast":null,"code":"import { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\nexport default {\n  __name: 'MacosElectrum',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const singleProjectHeader = {\n      singleProjectTitle: 'MacOS安装 atommicals electrum X server 不完全指南',\n      singleProjectDate: 'Nov 19,  2023',\n      singleProjectTag: ' electrum / Atom '\n    };\n    const projectInfo = {\n      clientHeading: '   教程原文 ',\n      companyInfos: [{\n        id: 1,\n        title: '原贴',\n        details: 'https://twitter.com/wusimpl/',\n        link: 'https://twitter.com/wusimpl/status/1726134325287281036'\n      }],\n      objectivesHeading: '',\n      objectivesDetails: '',\n      technologies: [{\n        title: '',\n        techs: []\n      }],\n      projectDetailsHeading: 'Challenge',\n      projectDetails: [{\n        id: 3,\n        header: \"《MacOS安装 atommicals electrum X server 不完全指南》\",\n        details: '拒绝使用docker安装atom节点，速度立省100%'\n      }, {\n        id: 2,\n        header: \"前置条件：\",\n        details: '1. 确保你已经安装了比特币全节点，且建立了区块索引（txindex=1）\\n' + '2. 确保你有足够的存储空间（>80GB），且最好使用SSD而非HDD，HDD会拖累索引速度。\\n' + '3. 耐心。安装途中可能会出现会很多错误，不过很大坑我已经帮你们踩了。'\n      }, {\n        id: 1,\n        header: \"几个自问自答问题：\",\n        details: '几个自问自答问题：\\n' + '1. 我已经使用docker索引了一部分区块了，这些索引好的部分可以用吗？\\n' + '答案是可以，只需在.env中将db directory改为你已存在索引的文件夹就可以了。\\n' + '\\n' + '2. 为什么不使用linux系统安装（比如ubuntu）\\n' + '对于我的情况来说很简单，我没有安装ubuntu系统，也不想弄云服务器。'\n      }, {\n        id: 4,\n        header: \"1️⃣ 安装 cmake 和 python3.8\\n\",\n        details: '这两个安装很简单，大家自己网上搜就好了。确保安装完成后可以在命令行使用且版本是对的。\\n' + '\\n' + 'python3.8可以独立安装，也可以使用conda或者virtualenv等环境管理器\\n' + '\\n' + '请确保python命令和pip命令是一致的。',\n        img: require('@/assets/hot/make.png')\n      }, {\n        id: 4,\n        header: \"2️⃣ 安装 leveldb 数据库\\n\",\n        details: '1. 下载 leveldb 1.21版本的源码\\n',\n        link: \"https://github.com/google/leveldb/archive/refs/tags/1.21.zip\"\n      }, {\n        id: 4,\n        details: '解压\\n' + '打开命令行，然后cd 到leveldb-1.21这个目录'\n      }, {\n        id: 4,\n        details: '2. 按图修改CMakeLists.txt\\n' + '加上一行命令\\n' + 'set(BUILD_SHARED_LIBS ON)',\n        img: require('@/assets/hot/CMakeLists.png')\n      }, {\n        id: 5,\n        img: require('@/assets/hot/cmlistSet.png')\n      }, {\n        id: 5,\n        header: \"2. 编译 leveldb\\n\",\n        details: '分别依次执行下面的两行命令\\n' + 'mkdir -p build && cd build\\n'\n      }, {\n        id: 5,\n        details: 'cmake -DCMAKE_BUILD_TYPE=Release .. && cmake --build .\\n' + '请确保这两行命令执行是成功\\n',\n        img: require('@/assets/hot/leveldb.png')\n      }, {\n        id: 6,\n        header: \" 3. 安装leveldb\",\n        details: '执行下面的命令（注意空格）\\n'\n      }, {\n        id: 6,\n        details: ' sudo  cp  -r  ../include/leveldb/ /usr/local/include/leveldb\\n'\n      }, {\n        id: 6,\n        details: 'sudo cp ./libleveldb.dylib /usr/local/lib'\n      }, {\n        id: 6,\n        header: \"3️⃣ 下载atommical electrum X server 代码并配置\\n\",\n        link: \"https://github.com/atomicals/atomicals-electrumx\"\n      }, {\n        id: 6,\n        details: '下载解压后里面有个.env文件，要修改的是\\n'\n      }, {\n        id: 6,\n        details: 'DAEMON_URL：改成你的全节点rpc url，这里应该需要配置比特币全节点的rpcuser和rpcpass\\n'\n      }, {\n        id: 6,\n        details: 'DB_DIRECTORY：改成你要存放数据的目录，如果已经有了部分索引，那就改到那个索引所在目录',\n        img: require('@/assets/hot/DB_DIRECTORY.png')\n      }, {\n        id: 6,\n        header: \"4️⃣ 安装 python 依赖\",\n        details: '请确保命令行在atomicals-electrumx目录，然后执行\\n'\n      }, {\n        id: 6,\n        details: 'pip install -r requirements.txt\\n'\n      }, {\n        id: 6,\n        details: '然后保险起见，我们将plyvel替换成旧版本\\n'\n      }, {\n        id: 6,\n        details: 'pip install plyvel==1.3.0\\n' + '\\n' + '请确保所有包都安装成功！！！'\n      }, {\n        id: 6,\n        header: \" 5️⃣ 启动 server 请开始索引\\n\",\n        details: '确保命令行在atomicals-electrumx目录，执行\\n'\n      }, {\n        id: 6,\n        details: 'python electrumx_server\\n'\n      }, {\n        id: 6,\n        details: '即开始索引，但有可能会报错，例如在某个目录找不到 libleveldb.dylib 这个文件，这时候就需要把 leveldb-1.21/build目录下我们编译好的libleveldb.dylib移动到这个目录。\\n'\n      }, {\n        id: 6,\n        details: '然后再次执行上面的命令。',\n        img: require('@/assets/hot/libleveldb.png')\n      }, {\n        id: 6,\n        details: '不出意外你的 server 将会开始进行索引。如果你遇到了问题，请在下方留言。'\n      }, {\n        id: 6,\n        img: require('@/assets/hot/serverserver.png')\n      }],\n      socialSharingsHeading: '',\n      socialSharings: []\n    };\n    const relatedProject = {\n      relatedProjectsHeading: 'Related Projects',\n      relatedProjects: [{\n        id: 1,\n        title: 'Mobile UI',\n        img: require('@/assets/images/starknet.jpg')\n      }, {\n        id: 2,\n        title: 'Web Application',\n        img: require('@/assets/images/raas.jpg')\n      }, {\n        id: 3,\n        title: 'UI Design',\n        img: require('@/assets/images/sui.jpg')\n      }, {\n        id: 4,\n        title: 'Kabul Mobile App UI',\n        img: require('@/assets/images/mev.jpg')\n      }]\n    };\n    onMounted(() => {\n      feather.replace();\n    });\n    onUpdated(() => {\n      feather.replace();\n    });\n    const __returned__ = {\n      singleProjectHeader,\n      projectInfo,\n      relatedProject,\n      onMounted,\n      onUpdated,\n      get feather() {\n        return feather;\n      },\n      ProjectHeader,\n      ProjectInfo,\n      ProjectRelatedProjects\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","onUpdated","feather","ProjectHeader","ProjectInfo","ProjectRelatedProjects","singleProjectHeader","singleProjectTitle","singleProjectDate","singleProjectTag","projectInfo","clientHeading","companyInfos","id","title","details","link","objectivesHeading","objectivesDetails","technologies","techs","projectDetailsHeading","projectDetails","header","img","require","socialSharingsHeading","socialSharings","relatedProject","relatedProjectsHeading","relatedProjects","replace"],"sources":["/Users/bill/mygit/web5page/src/views/hot/MacosElectrum.vue"],"sourcesContent":["<script setup>\nimport {onMounted, onUpdated} from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\n\nconst singleProjectHeader = {\n  singleProjectTitle: 'MacOS安装 atommicals electrum X server 不完全指南',\n  singleProjectDate: 'Nov 19,  2023',\n  singleProjectTag: ' electrum / Atom ',\n};\n\nconst projectInfo = {\n  clientHeading: '   教程原文 ',\n  companyInfos: [\n    {id: 1, title: '原贴', details: 'https://twitter.com/wusimpl/',link:'https://twitter.com/wusimpl/status/1726134325287281036'},\n  ],\n  objectivesHeading: '',\n  objectivesDetails: '',\n  technologies: [\n    {\n      title: '',\n      techs: [],\n    },\n  ],\n  projectDetailsHeading: 'Challenge',\n  projectDetails: [\n    {\n      id: 3,\n      header: \"《MacOS安装 atommicals electrum X server 不完全指南》\",\n      details: '拒绝使用docker安装atom节点，速度立省100%',\n    },\n    {\n      id: 2,\n      header: \"前置条件：\",\n      details: '1. 确保你已经安装了比特币全节点，且建立了区块索引（txindex=1）\\n' +\n          '2. 确保你有足够的存储空间（>80GB），且最好使用SSD而非HDD，HDD会拖累索引速度。\\n' +\n          '3. 耐心。安装途中可能会出现会很多错误，不过很大坑我已经帮你们踩了。',\n    },\n    {\n      id: 1,\n      header: \"几个自问自答问题：\",\n      details: '几个自问自答问题：\\n' +\n          '1. 我已经使用docker索引了一部分区块了，这些索引好的部分可以用吗？\\n' +\n          '答案是可以，只需在.env中将db directory改为你已存在索引的文件夹就可以了。\\n' +\n          '\\n' +\n          '2. 为什么不使用linux系统安装（比如ubuntu）\\n' +\n          '对于我的情况来说很简单，我没有安装ubuntu系统，也不想弄云服务器。',\n    },\n    {\n      id: 4,\n      header: \"1️⃣ 安装 cmake 和 python3.8\\n\",\n      details: '这两个安装很简单，大家自己网上搜就好了。确保安装完成后可以在命令行使用且版本是对的。\\n' +\n          '\\n' +\n          'python3.8可以独立安装，也可以使用conda或者virtualenv等环境管理器\\n' +\n          '\\n' +\n          '请确保python命令和pip命令是一致的。',\n      img: require('@/assets/hot/make.png'),\n\n    },\n    {\n      id: 4,\n      header: \"2️⃣ 安装 leveldb 数据库\\n\",\n      details: '1. 下载 leveldb 1.21版本的源码\\n',\n      link:\"https://github.com/google/leveldb/archive/refs/tags/1.21.zip\"\n    },\n    {\n      id: 4,\n      details: '解压\\n' +\n          '打开命令行，然后cd 到leveldb-1.21这个目录'\n    }, {\n      id: 4,\n      details: '2. 按图修改CMakeLists.txt\\n' +\n          '加上一行命令\\n' +\n          'set(BUILD_SHARED_LIBS ON)',\n      img: require('@/assets/hot/CMakeLists.png'),\n    },\n    {\n      id: 5,\n      img: require('@/assets/hot/cmlistSet.png'),\n    },\n    {\n      id: 5,\n      header: \"2. 编译 leveldb\\n\",\n      details: '分别依次执行下面的两行命令\\n' +\n          'mkdir -p build && cd build\\n',\n    },\n    {\n      id: 5,\n      details:\n          'cmake -DCMAKE_BUILD_TYPE=Release .. && cmake --build .\\n' +\n          '请确保这两行命令执行是成功\\n',\n      img: require('@/assets/hot/leveldb.png'),\n    },\n    {\n      id: 6,\n      header: \" 3. 安装leveldb\",\n      details: '执行下面的命令（注意空格）\\n'\n    },\n    {\n      id: 6,\n      details:\n          ' sudo  cp  -r  ../include/leveldb/ /usr/local/include/leveldb\\n'\n    },\n    {\n      id: 6,\n      details:\n          'sudo cp ./libleveldb.dylib /usr/local/lib'\n    },\n    {\n      id: 6,\n      header: \"3️⃣ 下载atommical electrum X server 代码并配置\\n\",\n      link: \"https://github.com/atomicals/atomicals-electrumx\"\n    },\n    {\n      id: 6,\n      details: '下载解压后里面有个.env文件，要修改的是\\n'\n    },\n    {\n      id: 6,\n      details:\n          'DAEMON_URL：改成你的全节点rpc url，这里应该需要配置比特币全节点的rpcuser和rpcpass\\n'\n\n    },\n    {\n      id: 6,\n      details:\n          'DB_DIRECTORY：改成你要存放数据的目录，如果已经有了部分索引，那就改到那个索引所在目录',\n      img: require('@/assets/hot/DB_DIRECTORY.png'),\n    },\n    {\n      id: 6,\n      header: \"4️⃣ 安装 python 依赖\",\n      details: '请确保命令行在atomicals-electrumx目录，然后执行\\n'\n    },\n    {\n      id: 6,\n      details:    'pip install -r requirements.txt\\n'\n    },\n    {\n      id: 6,\n      details:\n          '然后保险起见，我们将plyvel替换成旧版本\\n'\n    },\n    {\n      id: 6,\n      details:\n          'pip install plyvel==1.3.0\\n' +\n          '\\n' +\n          '请确保所有包都安装成功！！！'\n    },\n    {\n      id: 6,\n      header: \" 5️⃣ 启动 server 请开始索引\\n\",\n      details: '确保命令行在atomicals-electrumx目录，执行\\n'\n    },\n    {\n      id: 6,\n      details:\n          'python electrumx_server\\n'\n    },\n    {\n      id: 6,\n      details:\n          '即开始索引，但有可能会报错，例如在某个目录找不到 libleveldb.dylib 这个文件，这时候就需要把 leveldb-1.21/build目录下我们编译好的libleveldb.dylib移动到这个目录。\\n'\n    },\n    {\n      id: 6,\n      details:\n          '然后再次执行上面的命令。',\n      img: require('@/assets/hot/libleveldb.png'),\n    },\n    {\n      id: 6,\n      details: '不出意外你的 server 将会开始进行索引。如果你遇到了问题，请在下方留言。',\n    },\n    {\n      id: 6,\n      img: require('@/assets/hot/serverserver.png'),\n    },\n  ],\n  socialSharingsHeading: '',\n  socialSharings: [],\n};\n\nconst relatedProject = {\n  relatedProjectsHeading: 'Related Projects',\n  relatedProjects: [\n    {\n      id: 1,\n      title: 'Mobile UI',\n      img: require('@/assets/images/starknet.jpg'),\n    },\n    {\n      id: 2,\n      title: 'Web Application',\n      img: require('@/assets/images/raas.jpg'),\n    },\n    {\n      id: 3,\n      title: 'UI Design',\n      img: require('@/assets/images/sui.jpg'),\n    },\n    {\n      id: 4,\n      title: 'Kabul Mobile App UI',\n      img: require('@/assets/images/mev.jpg'),\n    },\n  ],\n};\n\n\nonMounted(() => {\n  feather.replace();\n});\n\nonUpdated(() => {\n  feather.replace();\n});\n</script>\n\n<template>\n  <div class=\"container mx-auto mt-10 sm:mt-20\">\n    <!-- Project header -->\n    <ProjectHeader :singleProjectHeader=\"singleProjectHeader\"/>\n\n    <!-- Project gallery -->\n    <!--    <ProjectGallery :projectImages=\"projectImages\" />-->\n\n    <!-- Project information -->\n    <ProjectInfo :projectInfo=\"projectInfo\"/>\n\n    <!-- Project related projects -->\n    <ProjectRelatedProjects :relatedProject=\"relatedProject\"/>\n  </div>\n</template>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\nexport default {\n  __name: 'ATOMNode',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const singleProjectHeader = {\n      singleProjectTitle: ' ATOM 节点 武装强化',\n      singleProjectDate: 'Nov 10,  2023',\n      singleProjectTag: 'Atom / CLI  '\n    };\n    const projectInfo = {\n      clientHeading: '  Dmint ',\n      companyInfos: [{\n        id: 1,\n        title: '推特@0xFatDog',\n        details: 'https://twitter.com/0xFatDog/',\n        link: 'https://twitter.com/0xFatDog/'\n      }, {\n        id: 2,\n        title: 'Next Dao 节点教程',\n        details: 'https://github.com/Next-DAO/atomicals-electrumx-docke',\n        link: 'https://github.com/Next-DAO/atomicals-electrumx-docke'\n      }],\n      objectivesHeading: 'ATOM 节点的选择',\n      objectivesDetails: ' 1 、默认官方 2 、切换第三方 3 、自建节点',\n      technologies: [{\n        title: '',\n        techs: []\n      }],\n      projectDetailsHeading: 'Challenge',\n      projectDetails: [{\n        id: 1,\n        header: \"RPC 节点是什么？\",\n        details: '当我们需要获取一些链上或者索引数据时，需要通过向某个网络地址发送请求，这个地址就是节点。大部分情况下我们用的是官方节点，但当同时使用的人数过多的时候，可能会造成官方节点瘫痪，大家都没得用了。这个时候就需要一些第三方节点。'\n      }, {\n        id: 2,\n        header: \"目前已知的3个节点分别是：\",\n        details: '1.由\\n' + '@atomicalsxyz\\n' + ' 官方提供的https://ep.atomicals.xyz'\n      }, {\n        id: 3,\n        details: '2.由\\n' + '@atomicalsmarket\\n' + ' 提供的 https://ep.atomicalmarket.com'\n      }, {\n        id: 4,\n        details: '3.由 \\n' + '@theNextDAO\\n' + ' 提供的 https://ep.nextdao.xyz'\n      }, {\n        id: 4,\n        header: \"—————— 自建节点 ——————\",\n        details: '使用Next Dao 教程 https://github.com/Next-DAO/atomicals-electrumx-docker#atomicals-electrumx-docker'\n      }, {\n        id: 4,\n        header: \"1. 更新您的比特币全节点 RPC 设置，如果已设置，请跳过。\",\n        details: ' 将其添加到您的 bitcoin.conf 中，然后重新启动您的比特币完整节点。需等待节点重新索引。',\n        img: require('@/assets/btc/atomrpc.png')\n      }, {\n        id: 4,\n        details: '或者 手工生成 rpcauth 使用 ：https://github.com/bitcoin/bitcoin/blob/master/share/rpcauth/rpcauth.py '\n      }, {\n        id: 5,\n        header: \"2. 克隆此存储库并运行服务器\",\n        details: 'git clone https://github.com/lucky2077/atomicals-electrumx-docker.git '\n      }, {\n        id: 5,\n        details: '创建一个 .env 文件，内容如下： DAEMON_URL=electrumx:electrumx@192.168.50.2:8332 // 你的局域网 IP'\n      }, {\n        id: 6,\n        details: '然后运行 ​​ElectrumX 服务器：docker-compose pull && docker-compose up -d '\n      }, {\n        id: 7,\n        header: \"如对教程疑问 或者 详情，请看官方链接\",\n        details: 'https://github.com/Next-DAO/atomicals-electrumx-docker'\n      }],\n      socialSharingsHeading: '',\n      socialSharings: []\n    };\n    const relatedProject = {\n      relatedProjectsHeading: 'Related Projects',\n      relatedProjects: [{\n        id: 1,\n        title: 'Mobile UI',\n        img: require('@/assets/images/starknet.jpg')\n      }, {\n        id: 2,\n        title: 'Web Application',\n        img: require('@/assets/images/raas.jpg')\n      }, {\n        id: 3,\n        title: 'UI Design',\n        img: require('@/assets/images/sui.jpg')\n      }, {\n        id: 4,\n        title: 'Kabul Mobile App UI',\n        img: require('@/assets/images/mev.jpg')\n      }]\n    };\n    onMounted(() => {\n      feather.replace();\n    });\n    onUpdated(() => {\n      feather.replace();\n    });\n    const __returned__ = {\n      singleProjectHeader,\n      projectInfo,\n      relatedProject,\n      onMounted,\n      onUpdated,\n      get feather() {\n        return feather;\n      },\n      ProjectHeader,\n      ProjectInfo,\n      ProjectRelatedProjects\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","onUpdated","feather","ProjectHeader","ProjectInfo","ProjectRelatedProjects","singleProjectHeader","singleProjectTitle","singleProjectDate","singleProjectTag","projectInfo","clientHeading","companyInfos","id","title","details","link","objectivesHeading","objectivesDetails","technologies","techs","projectDetailsHeading","projectDetails","header","img","require","socialSharingsHeading","socialSharings","relatedProject","relatedProjectsHeading","relatedProjects","replace"],"sources":["/Users/bill/mygit/web5page/src/views/insc/ATOMNode.vue"],"sourcesContent":["<script setup>\nimport { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\n\nconst singleProjectHeader = {\n  singleProjectTitle: ' ATOM 节点 武装强化',\n  singleProjectDate: 'Nov 10,  2023',\n  singleProjectTag: 'Atom / CLI  ',\n};\n\nconst projectInfo = {\n  clientHeading: '  Dmint ',\n  companyInfos: [\n    { id: 1, title: '推特@0xFatDog', details: 'https://twitter.com/0xFatDog/',link:'https://twitter.com/0xFatDog/' },\n    { id: 2, title: 'Next Dao 节点教程', details: 'https://github.com/Next-DAO/atomicals-electrumx-docke'\n    ,link:'https://github.com/Next-DAO/atomicals-electrumx-docke'},\n],\n  objectivesHeading: 'ATOM 节点的选择',\n  objectivesDetails: ' 1 、默认官方 2 、切换第三方 3 、自建节点',\n  technologies: [\n    {\n      title: '',\n      techs: [],\n    },\n  ],\n  projectDetailsHeading: 'Challenge',\n  projectDetails: [\n    {\n      id: 1,\n      header: \"RPC 节点是什么？\",\n      details: '当我们需要获取一些链上或者索引数据时，需要通过向某个网络地址发送请求，这个地址就是节点。大部分情况下我们用的是官方节点，但当同时使用的人数过多的时候，可能会造成官方节点瘫痪，大家都没得用了。这个时候就需要一些第三方节点。',\n    },\n    {\n      id: 2,\n      header: \"目前已知的3个节点分别是：\",\n      details: '1.由\\n' +\n          '@atomicalsxyz\\n' +\n          ' 官方提供的https://ep.atomicals.xyz'\n    },\n    {\n      id: 3,\n      details: '2.由\\n' +\n          '@atomicalsmarket\\n' +\n          ' 提供的 https://ep.atomicalmarket.com'\n    },\n    {\n      id: 4,\n      details: '3.由 \\n' +\n          '@theNextDAO\\n' +\n          ' 提供的 https://ep.nextdao.xyz'\n    },\n    {\n      id: 4,\n      header: \"—————— 自建节点 ——————\",\n      details: '使用Next Dao 教程 https://github.com/Next-DAO/atomicals-electrumx-docker#atomicals-electrumx-docker'\n    }, {\n      id: 4,\n      header: \"1. 更新您的比特币全节点 RPC 设置，如果已设置，请跳过。\",\n      details: ' 将其添加到您的 bitcoin.conf 中，然后重新启动您的比特币完整节点。需等待节点重新索引。',\n      img: require('@/assets/btc/atomrpc.png'),\n\n    }, {\n      id: 4,\n      details: '或者 手工生成 rpcauth 使用 ：https://github.com/bitcoin/bitcoin/blob/master/share/rpcauth/rpcauth.py '\n    },\n    {\n      id: 5,\n      header: \"2. 克隆此存储库并运行服务器\",\n      details: 'git clone https://github.com/lucky2077/atomicals-electrumx-docker.git ',\n    },\n    {\n      id: 5,\n      details: '创建一个 .env 文件，内容如下： DAEMON_URL=electrumx:electrumx@192.168.50.2:8332 // 你的局域网 IP'\n\n    },\n    {\n      id: 6,\n      details: '然后运行 ​​ElectrumX 服务器：docker-compose pull && docker-compose up -d '\n    },\n    {\n      id: 7,\n      header: \"如对教程疑问 或者 详情，请看官方链接\",\n      details: 'https://github.com/Next-DAO/atomicals-electrumx-docker',\n    },\n  ],\n  socialSharingsHeading: '',\n  socialSharings: [\n\n  ],\n};\n\nconst relatedProject = {\n  relatedProjectsHeading: 'Related Projects',\n  relatedProjects: [\n    {\n      id: 1,\n      title: 'Mobile UI',\n      img: require('@/assets/images/starknet.jpg'),\n    },\n    {\n      id: 2,\n      title: 'Web Application',\n      img: require('@/assets/images/raas.jpg'),\n    },\n    {\n      id: 3,\n      title: 'UI Design',\n      img: require('@/assets/images/sui.jpg'),\n    },\n    {\n      id: 4,\n      title: 'Kabul Mobile App UI',\n      img: require('@/assets/images/mev.jpg'),\n    },\n  ],\n};\n\n\nonMounted(() => {\n  feather.replace();\n});\n\nonUpdated(() => {\n  feather.replace();\n});\n</script>\n\n<template>\n  <div class=\"container mx-auto mt-10 sm:mt-20\">\n    <!-- Project header -->\n    <ProjectHeader :singleProjectHeader=\"singleProjectHeader\" />\n\n    <!-- Project gallery -->\n    <!--    <ProjectGallery :projectImages=\"projectImages\" />-->\n\n    <!-- Project information -->\n    <ProjectInfo :projectInfo=\"projectInfo\" />\n\n    <!-- Project related projects -->\n    <ProjectRelatedProjects :relatedProject=\"relatedProject\" />\n  </div>\n</template>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mx-auto mt-10 sm:mt-20\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Project header \"), _createVNode($setup[\"ProjectHeader\"], {\n    singleProjectHeader: $setup.singleProjectHeader\n  }), _createCommentVNode(\" Project gallery \"), _createCommentVNode(\"    <ProjectGallery :projectImages=\\\"projectImages\\\" />\"), _createCommentVNode(\" Project information \"), _createVNode($setup[\"ProjectInfo\"], {\n    projectInfo: $setup.projectInfo\n  }), _createCommentVNode(\" Project related projects \"), _createVNode($setup[\"ProjectRelatedProjects\"], {\n    relatedProject: $setup.relatedProject\n  })]);\n}","map":{"version":3,"mappings":";;EAgMOA,KAAK,EAAC;AAAkC;;uBAA7CC,oBAYM,OAZNC,UAYM,GAXJC,uCAAuB,EACvBC,aAA2DC;IAA3CC,mBAAmB,EAAED;EAAmB,IAExDF,wCAAwB,EACxBA,8EAA4D,EAE5DA,4CAA4B,EAC5BC,aAAyCC;IAA3BE,WAAW,EAAEF;EAAW,IAEtCF,iDAAiC,EACjCC,aAA0DC;IAAjCG,cAAc,EAAEH;EAAc","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","singleProjectHeader","projectInfo","relatedProject"],"sourceRoot":"","sources":["/Users/bill/mygit/web5page/src/views/hot/WindowsElectrum.vue"],"sourcesContent":["<script setup>\nimport {onMounted, onUpdated} from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\n\nconst singleProjectHeader = {\n  singleProjectTitle: '如何用windows 编译原生的 atomicals 索引程序',\n  singleProjectDate: 'Nov 19,  2023',\n  singleProjectTag: ' electrum / Atom ',\n};\n\nconst projectInfo = {\n  clientHeading: '   教程原文 ',\n  companyInfos: [\n    {id: 1, title: '原贴', details: 'https://twitter.com/zhangch30063843',link:'https://twitter.com/zhangch30063843/status/1725851723930227095'},\n  ],\n  objectivesHeading: '',\n  objectivesDetails: '',\n  technologies: [\n    {\n      title: '',\n      techs: [],\n    },\n  ],\n  projectDetailsHeading: 'Challenge',\n  projectDetails: [\n    {\n      id: 3,\n      header: \"如何用windows 编译原生的 atomicals 索引程序\",\n      details: '为什么要编译原生的，因为docker 性能太差，速度太慢了\\n'\n    },\n    {\n      id: 2,\n      details: '难点：windows 安装项目的时候，由于，python缺少leveldb 对应的windows包，所以需要自己现编译。\\n',\n    },\n    {\n      id: 1,\n      details: \"该项目基于python 3.10.x ，需要用到的链接：\\n\",\n      link:\"https://github.com/atomicals/atomicals-electrumx\"\n    },\n    {\n      id: 4,\n      header: \"一、windows 编译需要的准备工具：\\n\",\n      details: 'vc 编译工具，提前安装visual studio 2022，安装vc+\\n',\n\n    },\n    {\n      id: 4,\n      header: \"二、安装vcpkg\\n\",\n      details: '由于项目要用到leveldb，而作者没有发布 leveldb 的windows 包，所以需要现编译，打开CMD输入以下命令：\\n'\n    },\n    {\n      id: 4,\n      details: ' d:\\n'\n    },\n    {\n      id: 4,\n      details:\n          'git clone https://github.com/Microsoft/vcpkg.git\\n'\n    },\n    {\n      id: 4,\n      details:\n          '.\\\\vcpkg\\\\bootstrap-vcpkg.bat'\n    },\n    {\n      id: 4,\n      details:\n          '我这里 安装的路径在D盘，是：D:\\\\vcpkg\\n'\n    },\n    {\n      id: 4,\n      header: \"三、安装leveldb\\n\",\n      details: '.\\\\vcpkg\\\\vcpkg install leveldb --triplet x64-windows\\n'\n    },\n    {\n      id: 4,\n      details: '安装之后的头文件和库文件的目录分别是：\\n'\n    },\n    {\n      id: 4,\n      details: ' D:\\\\vcpkg\\\\installed\\x64-windows\\\\include\\n'\n    },\n    {\n      id: 4,\n      details: 'D:\\\\vcpkg\\\\installed\\x64-windows\\\\lib\\n'\n    },\n    {\n      header: \"四、python 安装项目\\n\",\n      details: 'git clone https://github.com/atomicals/atomicals-electrumx',\n    },\n    {\n      id: 5,\n      details: 'cd atomicals-electrumx\\n'\n    },\n    {\n      id: 5,\n      details: ' pip install --user --global-option=build_ext --global-option=\"-ID:\\\\vcpkg\\\\installed\\x64-windows\\\\include\" --global-option=\"-LD:\\\\vcpkg\\\\installed\\x64-windows\\\\lib\" --global-option=\"-lleveldb\" -r requirements.txt',\n    },\n    {\n      id: 6,\n      details: 'pip install python-dotenv\\n'\n    },\n    {\n      id: 7,\n      header: \"五、修改源代码\\n\",\n      details: '支持项目读取 .env文件，将下面的代码加入 lib\\\\env_base.py 中\\n'\n    },\n    {\n      id: 7,\n      details:\n          'from dotenv import load_dotenv\\n'\n    },\n    {\n      id: 7,\n      details:\n          'load_dotenv()'\n    },\n    {\n      id: 8,\n      header: \"六、修改配置文件\\n\",\n      details: '修改bitcoin core rpc 的url 和本地索引存储路径\\n'\n    },\n    {\n      id: 9,\n      header: \"七、启动索引程序\\n\",\n      details: 'python electrumx_server\\n'\n    },\n    {\n      id: 10,\n      details: '系统预计5个小时跑完索引\\n'\n    },\n    {\n      id: 10,\n      img: require('@/assets/hot/windows1.png'),\n    },\n    {\n      id: 10,\n      img: require('@/assets/hot/windows2.png'),\n    },\n    {\n      id: 10,\n      img: require('@/assets/hot/windows3.png'),\n    },\n    {\n      id: 10,\n      img: require('@/assets/hot/windows4.png'),\n    },\n  ],\n  socialSharingsHeading: '',\n  socialSharings: [],\n};\n\nconst relatedProject = {\n  relatedProjectsHeading: 'Related Projects',\n  relatedProjects: [\n    {\n      id: 1,\n      title: 'Mobile UI',\n      img: require('@/assets/images/starknet.jpg'),\n    },\n    {\n      id: 2,\n      title: 'Web Application',\n      img: require('@/assets/images/raas.jpg'),\n    },\n    {\n      id: 3,\n      title: 'UI Design',\n      img: require('@/assets/images/sui.jpg'),\n    },\n    {\n      id: 4,\n      title: 'Kabul Mobile App UI',\n      img: require('@/assets/images/mev.jpg'),\n    },\n  ],\n};\n\n\nonMounted(() => {\n  feather.replace();\n});\n\nonUpdated(() => {\n  feather.replace();\n});\n</script>\n\n<template>\n  <div class=\"container mx-auto mt-10 sm:mt-20\">\n    <!-- Project header -->\n    <ProjectHeader :singleProjectHeader=\"singleProjectHeader\"/>\n\n    <!-- Project gallery -->\n    <!--    <ProjectGallery :projectImages=\"projectImages\" />-->\n\n    <!-- Project information -->\n    <ProjectInfo :projectInfo=\"projectInfo\"/>\n\n    <!-- Project related projects -->\n    <ProjectRelatedProjects :relatedProject=\"relatedProject\"/>\n  </div>\n</template>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}
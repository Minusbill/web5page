{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pt-10 sm:pt-14\"\n};\nconst _hoisted_2 = {\n  class: \"text-center\"\n};\nconst _hoisted_3 = {\n  class: \"font-general-semibold text-2xl sm:text-5xl font-semibold mb-2 text-ternary-dark dark:text-ternary-light\"\n};\nconst _hoisted_4 = {\n  class: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 mt-6 sm:gap-10\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Projects grid \"), _createElementVNode(\"section\", _hoisted_1, [_createCommentVNode(\" Projects grid title \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, _toDisplayString($setup.projectsHeading), 1 /* TEXT */)]), _createCommentVNode(\" Projects grid \"), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredProjects, project => {\n    return _openBlock(), _createBlock($setup[\"ProjectSingle\"], {\n      key: project.id,\n      project: project\n    }, null, 8 /* PROPS */, [\"project\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EA4CUA,KAAK,EAAC;AAAgB;;EAEzBA,KAAK,EAAC;AAAa;;EAEtBA,KAAK,EAAC;AAAyG;;EAQhHA,KAAK,EAAC;AAA+D;;6DAbvEC,sCAAsB,EACtBC,oBAoBU,WApBVC,UAoBU,GAnBTF,4CAA4B,EAC5BC,oBAMM,OANNE,UAMM,GALLF,oBAII,KAJJG,UAII,mBADAC,sBAAe,oBAIpBL,sCAAsB,EACtBC,oBAQM,OARNK,UAQM,sBALLC,oBAIEC,6BAHiBH,uBAAgB,EAA3BI,OAAO;yBADfC,aAIEL;MAFAM,GAAG,EAAEF,OAAO,CAACG,EAAE;MACfH,OAAO,EAAEA","names":["class","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","$setup","_hoisted_4","_createElementBlock","_Fragment","project","_createBlock","key","id"],"sourceRoot":"","sources":["/Users/bill/mygit/web5page/src/components/projects/BlastProjectsGrid.vue"],"sourcesContent":["<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectsFilter from './ProjectsFilter.vue';\nimport ProjectSingle from './ProjectSingle.vue';\nimport projectsData from '../../data/blast';\n\n// Data\nconst projects = ref(projectsData);\nconst projectsHeading = ref('Blast 项目学习');\nconst selectedCategory = ref('');\nconst searchProject = ref('');\n\n// Computed\nconst filteredProjects = computed(() => {\n  if (selectedCategory.value) {\n    return filterProjectsByCategory();\n  } else if (searchProject.value) {\n    return filterProjectsBySearch();\n  }\n  return projects.value;\n});\n\n// Methods\nfunction filterProjectsByCategory() {\n  return projects.value.filter((item) => {\n    let category = item.category.charAt(0).toUpperCase() + item.category.slice(1);\n    return category.includes(selectedCategory.value);\n  });\n}\n\nfunction filterProjectsBySearch() {\n  let project = new RegExp(searchProject.value, 'i');\n  return projects.value.filter((el) => el.title.match(project));\n}\n\nonMounted(() => {\n  feather.replace();\n});\n</script>\n\n\n<template>\n\t<!-- Projects grid -->\n\t<section class=\"pt-10 sm:pt-14\">\n\t\t<!-- Projects grid title -->\n\t\t<div class=\"text-center\">\n\t\t\t<p\n\t\t\t\tclass=\"font-general-semibold text-2xl sm:text-5xl font-semibold mb-2 text-ternary-dark dark:text-ternary-light\"\n\t\t\t>\n\t\t\t\t{{ projectsHeading }}\n\t\t\t</p>\n\t\t</div>\n\n\t\t<!-- Projects grid -->\n\t\t<div\n\t\t\tclass=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 mt-6 sm:gap-10\"\n\t\t>\n\t\t\t<ProjectSingle\n\t\t\t\tv-for=\"project in filteredProjects\"\n\t\t\t\t:key=\"project.id\"\n\t\t\t\t:project=\"project\"\n\t\t\t/>\n\t\t</div>\n\t</section>\n</template>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}
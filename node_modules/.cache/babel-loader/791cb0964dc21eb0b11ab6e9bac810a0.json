{"ast":null,"code":"import { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\nexport default {\n  __name: 'Dmint',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const singleProjectHeader = {\n      singleProjectTitle: ' ATOM 的 Dmint 是什么',\n      singleProjectDate: 'Nov 10,  2023',\n      singleProjectTag: 'Atom / Dmint '\n    };\n    const projectInfo = {\n      clientHeading: '  Dmint ',\n      companyInfos: [{\n        id: 1,\n        title: '原文出自',\n        details: 'https://github.com/atomicals/atomicals-js/',\n        link: 'https://github.com/atomicals/atomicals-js/blob/master/container-dmint-guide.md#step-0-claim-container'\n      }, {\n        id: 2,\n        title: 'ATOM Github',\n        details: 'https://github.com/atomicals/atomicals-js',\n        link: 'https://github.com/atomicals/atomicals-js'\n      }, {\n        id: 3,\n        title: ' 什么是dmint',\n        details: 'atom 发行 NFT 的方式'\n      }],\n      objectivesHeading: '',\n      objectivesDetails: '',\n      technologies: [{\n        title: '',\n        techs: []\n      }],\n      projectDetailsHeading: 'Challenge',\n      projectDetails: [{\n        id: 1,\n        header: \"什么是 Dmint\",\n        details: 'Dmint (Decentralized Mint ) 即去中心化铸币，是一种允许用户将图像放在链上以在集合中认领 NFT 的方式。 NFT 集合的创建者定义了铸币高度、规则和必须匹配的特定图像文件哈希，以便声明容器集合中的项目之一。'\n      }, {\n        id: 2,\n        details: '你可以理解为，是 ATOM 提供的一种给项目方部署 NFT，用户 使用工程cli 进行 Mint 的交互方式。'\n      }, {\n        id: 3,\n        header: \"普通用户角度，只需要关心：什么时候、要打的内容\",\n        details: '什么时候 Mint 、 Mint 的信息（项目名称、要打的内容 + 文件） 即可'\n      }, {\n        id: 4,\n        header: \"用户命令 - 使用就能打 - （ 官方 Github 尚未更新可用版）\",\n        details: 'yarn cli mint-dmitem #mycoolcontainername \"0000\" \"file1.png\"'\n      }, {\n        id: 4,\n        details: '#mycoolcontainername - 容器名字 （ 理解为项目名字）'\n      }, {\n        id: 4,\n        details: '\"0000\" - 要打的NFT 名字'\n      }, {\n        id: 4,\n        details: '\"file1.png\" - 打的时候的文件 - Hash 值和项目方设置时候一样'\n      }, {\n        id: 5,\n        header: \"———————————— \"\n      }, {\n        id: 5,\n        header: \"项目方视角：如何部署 /  0 -认领 容器 -用 mycoolcontainername 代表容器名 \",\n        details: ' yarn cli mint-container mycoolcontainername --satsbyte=10'\n      }, {\n        id: 6,\n        header: \"1 - 准备 NFT 图像文件 - 生成 哈希 等\",\n        details: 'yarn cli prepare-dmint-manifest ./nftimages chunks'\n      }, {\n        id: 7,\n        header: \"2 -  将每个项目块（item chunk) 上传到容器\",\n        details: 'yarn cli prepare-dmint-items mycoolcontainername ./chunks0.json --satsbyte=10'\n      }, {\n        id: 8,\n        header: \"3 -  启动dmint 并设置 mint 高度\",\n        details: 'yarn cli prepare-dmint-config mycoolcontainername 812000'\n      }, {\n        id: 9,\n        header: \"4 -   验证容器是否已 dmint 就绪 - 问题都解决且状态为 ready\",\n        details: 'yarn cli state #mycoolcontainername'\n      }, {\n        id: 10,\n        header: \"5 -   密封容器\",\n        details: 'yarn cli seal #mycoolcontainername'\n      }],\n      socialSharingsHeading: '',\n      socialSharings: []\n    };\n    const relatedProject = {\n      relatedProjectsHeading: 'Related Projects',\n      relatedProjects: [{\n        id: 1,\n        title: 'Mobile UI',\n        img: require('@/assets/images/starknet.jpg')\n      }, {\n        id: 2,\n        title: 'Web Application',\n        img: require('@/assets/images/raas.jpg')\n      }, {\n        id: 3,\n        title: 'UI Design',\n        img: require('@/assets/images/sui.jpg')\n      }, {\n        id: 4,\n        title: 'Kabul Mobile App UI',\n        img: require('@/assets/images/mev.jpg')\n      }]\n    };\n    onMounted(() => {\n      feather.replace();\n    });\n    onUpdated(() => {\n      feather.replace();\n    });\n    const __returned__ = {\n      singleProjectHeader,\n      projectInfo,\n      relatedProject,\n      onMounted,\n      onUpdated,\n      get feather() {\n        return feather;\n      },\n      ProjectHeader,\n      ProjectInfo,\n      ProjectRelatedProjects\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","onUpdated","feather","ProjectHeader","ProjectInfo","ProjectRelatedProjects","singleProjectHeader","singleProjectTitle","singleProjectDate","singleProjectTag","projectInfo","clientHeading","companyInfos","id","title","details","link","objectivesHeading","objectivesDetails","technologies","techs","projectDetailsHeading","projectDetails","header","socialSharingsHeading","socialSharings","relatedProject","relatedProjectsHeading","relatedProjects","img","require","replace"],"sources":["/Users/bill/mygit/web5page/src/views/hot/Dmint.vue"],"sourcesContent":["<script setup>\nimport { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/projects/ProjectHeader.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfoLeft.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\n\nconst singleProjectHeader = {\n  singleProjectTitle: ' ATOM 的 Dmint 是什么',\n  singleProjectDate: 'Nov 10,  2023',\n  singleProjectTag: 'Atom / Dmint ',\n};\n\nconst projectInfo = {\n  clientHeading: '  Dmint ',\n  companyInfos: [\n    { id: 1, title: '原文出自', details: 'https://github.com/atomicals/atomicals-js/',\n    link:'https://github.com/atomicals/atomicals-js/blob/master/container-dmint-guide.md#step-0-claim-container'},\n    { id: 2, title: 'ATOM Github', details: 'https://github.com/atomicals/atomicals-js',link:'https://github.com/atomicals/atomicals-js'},\n    { id: 3, title: ' 什么是dmint', details: 'atom 发行 NFT 的方式' },\n\n],\n  objectivesHeading: '',\n  objectivesDetails: '',\n  technologies: [\n    {\n      title: '',\n      techs: [],\n    },\n  ],\n  projectDetailsHeading: 'Challenge',\n  projectDetails: [\n    {\n      id: 1,\n      header: \"什么是 Dmint\",\n      details: 'Dmint (Decentralized Mint ) 即去中心化铸币，是一种允许用户将图像放在链上以在集合中认领 NFT 的方式。 NFT 集合的创建者定义了铸币高度、规则和必须匹配的特定图像文件哈希，以便声明容器集合中的项目之一。',\n    },\n    {\n      id: 2,\n      details: '你可以理解为，是 ATOM 提供的一种给项目方部署 NFT，用户 使用工程cli 进行 Mint 的交互方式。',\n    },\n    {\n      id: 3,\n      header: \"普通用户角度，只需要关心：什么时候、要打的内容\",\n      details: '什么时候 Mint 、 Mint 的信息（项目名称、要打的内容 + 文件） 即可'\n    },\n    {\n      id: 4,\n      header: \"用户命令 - 使用就能打 - （ 官方 Github 尚未更新可用版）\",\n      details: 'yarn cli mint-dmitem #mycoolcontainername \"0000\" \"file1.png\"'\n    },\n    {\n      id: 4,\n      details: '#mycoolcontainername - 容器名字 （ 理解为项目名字）'\n    }, {\n      id: 4,\n      details: '\"0000\" - 要打的NFT 名字'\n    }, {\n      id: 4,\n      details: '\"file1.png\" - 打的时候的文件 - Hash 值和项目方设置时候一样'\n    },\n    {\n      id: 5,\n      header: \"———————————— \",\n    },\n    {\n      id: 5,\n      header: \"项目方视角：如何部署 /  0 -认领 容器 -用 mycoolcontainername 代表容器名 \",\n      details: ' yarn cli mint-container mycoolcontainername --satsbyte=10'\n    },\n    {\n      id: 6,\n      header: \"1 - 准备 NFT 图像文件 - 生成 哈希 等\",\n      details: 'yarn cli prepare-dmint-manifest ./nftimages chunks'\n    },\n    {\n      id: 7,\n      header: \"2 -  将每个项目块（item chunk) 上传到容器\",\n      details: 'yarn cli prepare-dmint-items mycoolcontainername ./chunks0.json --satsbyte=10'\n    },\n    {\n      id: 8,\n      header: \"3 -  启动dmint 并设置 mint 高度\",\n      details: 'yarn cli prepare-dmint-config mycoolcontainername 812000'\n    },\n    {\n      id: 9,\n      header: \"4 -   验证容器是否已 dmint 就绪 - 问题都解决且状态为 ready\",\n      details: 'yarn cli state #mycoolcontainername'\n    },\n    {\n      id: 10,\n      header: \"5 -   密封容器\",\n      details: 'yarn cli seal #mycoolcontainername'\n    },\n  ],\n  socialSharingsHeading: '',\n  socialSharings: [\n\n  ],\n};\n\nconst relatedProject = {\n  relatedProjectsHeading: 'Related Projects',\n  relatedProjects: [\n    {\n      id: 1,\n      title: 'Mobile UI',\n      img: require('@/assets/images/starknet.jpg'),\n    },\n    {\n      id: 2,\n      title: 'Web Application',\n      img: require('@/assets/images/raas.jpg'),\n    },\n    {\n      id: 3,\n      title: 'UI Design',\n      img: require('@/assets/images/sui.jpg'),\n    },\n    {\n      id: 4,\n      title: 'Kabul Mobile App UI',\n      img: require('@/assets/images/mev.jpg'),\n    },\n  ],\n};\n\n\nonMounted(() => {\n  feather.replace();\n});\n\nonUpdated(() => {\n  feather.replace();\n});\n</script>\n\n<template>\n  <div class=\"container mx-auto mt-10 sm:mt-20\">\n    <!-- Project header -->\n    <ProjectHeader :singleProjectHeader=\"singleProjectHeader\" />\n\n    <!-- Project gallery -->\n    <!--    <ProjectGallery :projectImages=\"projectImages\" />-->\n\n    <!-- Project information -->\n    <ProjectInfo :projectInfo=\"projectInfo\" />\n\n    <!-- Project related projects -->\n    <ProjectRelatedProjects :relatedProject=\"relatedProject\" />\n  </div>\n</template>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}
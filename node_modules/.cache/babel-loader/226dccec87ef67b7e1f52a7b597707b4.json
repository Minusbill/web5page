{"ast":null,"code":"import { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/web5Component/Web5Header.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfo.vue';\nimport ProjectInfo2 from '../../components/web5Component/Web5ProjectInfo2.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\nexport default {\n  __name: 'StarknetPrinciple',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const singleProjectHeader = {\n      singleProjectTitle: 'Starknet 工作原理',\n      singleProjectDate: 'Jul 26, 2021',\n      singleProjectTag: 'zk / zk-STARKs'\n    };\n    const projectImages = [{\n      id: 1,\n      title: 'Kabul Project Management UI',\n      img: require('@/assets/images/ui-project-1.jpg')\n    }, {\n      id: 2,\n      title: 'Kabul Project Management UI',\n      img: require('@/assets/images/web-project-2.jpg')\n    }, {\n      id: 3,\n      title: 'Kabul Project Management UI',\n      img: require('@/assets/images/mobile-project-2.jpg')\n    }];\n    const projectInfo = {\n      clientHeading: 'About Client',\n      companyInfos: [{\n        id: 1,\n        title: 'Name',\n        details: 'Company Ltd'\n      }, {\n        id: 2,\n        title: 'Services',\n        details: 'UI Design & Frontend Development'\n      }, {\n        id: 3,\n        title: 'Website',\n        details: 'https://company.com'\n      }, {\n        id: 4,\n        title: 'Phone',\n        details: '555 8888 888'\n      }],\n      objectivesHeading: 'Objective',\n      objectivesDetails: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio, natus! Quibusdam enim quod in esse, mollitia molestias incidunt quas ipsa accusamus veniam.',\n      technologies: [{\n        title: 'Tools & Technologies',\n        techs: ['HTML', 'CSS', 'JavaScript', 'Vue.js', 'TailwindCSS', 'AdobeXD']\n      }],\n      projectDetailsHeading: 'Challenge',\n      projectDetails: [{\n        id: 1,\n        header: \"什么是 Zk-Proofs\",\n        details: 'Zk-proofs 即 Zero-Knowledge Proofs 的缩写，中文称为零知识证明。零知识证明是一种方法，通过这种方法，一方可以向另一方证明给定的陈述是真实的，除了该陈述是真实的事实之外，无需透露任何其他信息。'\n      }, {\n        id: 2,\n        header: \"ZK-STARK 是什么\",\n        details: 'ZK-STARKs 是一个证明系统——两种算法之间的交互过程中允许区块链更加容易地验证计算的完整性，Verifier 和 Approver 双方可以通过交互来验证大量交易的完整性。'\n      }, {\n        id: 3,\n        header: \"ZK-Rollup VS OP-Rollup\",\n        details: 'OP-rollup 和 ZK-rollup 相比，ZK-rollup 则是一种比 OP-rollup 更加安全的替代方案，而 OP-rollup 则是具有 EVM 兼容性的 DeFi 项目的更好选择。由此可见，具备 EVM 兼容性的 ZK-rollup 以其天然的安全性的优势将会是 Layer2 的未来的叙事发展方向。安全性的实现这一优势要归功于 StarkNet 对最安全、最可扩展的密码学证明系统 — — STARK 的依赖。'\n      }, {\n        id: 4,\n        header: \"Zk-STARKs VS Zk-SNARKs\",\n        details: '选择使用 SNARKs 还是 STARKs 取决于具体的应用场景和需求。SNARKs 在证明大小和验证速度上有优势，但需要信任设置。而 STARKs 不需要信任设置，对量子计算机攻击有抵抗力，但证明较大，验证速度较慢。 zk-STARKs 却是一种不需要信任设置的零知识证明系统。与需要信任设置的系统（如 zk-SNARKs）不同，zk-STARKs 的证明生成和验证过程不依赖于任何秘密信息。这提供了更高的透明性和安全性，因为系统的安全性不依赖于任何特定个体或组织的行为。zk-STARKs 是通过使用一种被称为「FRI」（Fast Reed-Solomon Interactive Oracle Proofs）的技术实现的。'\n      }, {\n        id: 5,\n        header: \"FRI 协议\",\n        details: 'FRI 协议的基本思想是通过一系列的抽样和插值步骤，逐步降低多项式的度。在每一步，证明者都会提供一个新的多项式，并声称它是原始多项式的一个压缩版本。验证者可以通过检查这些多项式在随机点上的值，来验证这个声称是否正确。'\n      }],\n      socialSharingsHeading: '',\n      socialSharings: []\n    };\n    const projectInfo2 = {\n      clientHeading: 'About Client',\n      companyInfos: [],\n      objectivesHeading: 'Objective',\n      objectivesDetails: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio, natus! Quibusdam enim quod in esse, mollitia molestias incidunt quas ipsa accusamus veniam.',\n      technologies: [{\n        title: 'Tools & Technologies',\n        techs: ['HTML', 'CSS', 'JavaScript', 'Vue.js', 'TailwindCSS', 'AdobeXD']\n      }],\n      projectDetailsHeading: 'Starknet 工作原理',\n      projectDetails: [{\n        id: 1,\n        details: '1. 用户发起交易，并将交易发送给 Squencer 进行验证、排序和执行，并打包批次。目前 StarkNet 系统中只有一个 StarkWare 官方掌握的 Sequencer，但 StarkWare 团队计划后续将 Squencer 去中心化；Squencer 通过 Cairo OS 来执行交易，扮演了 EVM 的角色。'\n      }, {\n        id: 2,\n        details: '2. Squencer 将执行交易的踪迹递交给 Prover，由 Prover 对计算完整性生成一个有效性证明。执行踪迹是生成 zkp 的核心，记录执行踪迹是 Cairo 语言的 zk 友好特性；这里的 Prover 也为 StarkEx 生成有效性证明，且可以聚合来自不同 StarkEx 应用和 StarkNet 的交易，实现共享。'\n      }, {\n        id: 3,\n        details: '3. Squencer 和 Prover 将有效性证明和全局状态变化发送给全节点进行记录。全节点基于 P2P 网络构建，负责记录整个 Layer2 网络的交易历史和以太坊主网上与 Layer2 相关的交易。'\n      }, {\n        id: 4,\n        details: '4. Prover 将有效性证明递交给主网上的 Verifier。Verifier 是部署在以太坊主网上的智能合约，负责收取并验证 Prover 提供的有效性证明。'\n      }, {\n        id: 5,\n        details: '5. Verifier 将验证过的结果发送至主网上的 StarkNet Core 合约进行记录和保存。StarkNet Core 合约部署在以太坊主网上，用于接收 Layer2 全局状态变化信息，包括状态哈希以及数据可用性；经过 Verifier 验证过的结果是一串状态哈希，由 Verifier 写入一笔新的 Layer1 交易，并传递给 Core 合约进行保存。'\n      }, {\n        id: 6,\n        details: '6. StarkNet Core 合约接收到验证结果（状态哈希）后，从 Layer2 接收「Call data」形式的数据可用性并保存。该数据会同步给 Layer2 的全节点进行解码，以保证全节点能够记录和重建 Layer2 的历史交易；在 Validium 方案中，StarkNet Core 合约不保存数据可用性，仅保存状态哈希。'\n      }]\n    };\n    const relatedProject = {\n      relatedProjectsHeading: 'Related Projects',\n      relatedProjects: [{\n        id: 1,\n        title: 'Mobile UI',\n        img: require('@/assets/images/starknet.jpg')\n      }, {\n        id: 2,\n        title: 'Web Application',\n        img: require('@/assets/images/raas.jpg')\n      }, {\n        id: 3,\n        title: 'UI Design',\n        img: require('@/assets/images/sui.jpg')\n      }, {\n        id: 4,\n        title: 'Kabul Mobile App UI',\n        img: require('@/assets/images/mev.jpg')\n      }]\n    };\n    onMounted(() => {\n      feather.replace();\n    });\n    onUpdated(() => {\n      feather.replace();\n    });\n    const __returned__ = {\n      singleProjectHeader,\n      projectImages,\n      projectInfo,\n      projectInfo2,\n      relatedProject,\n      onMounted,\n      onUpdated,\n      get feather() {\n        return feather;\n      },\n      ProjectHeader,\n      ProjectInfo,\n      ProjectInfo2,\n      ProjectRelatedProjects\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","onUpdated","feather","ProjectHeader","ProjectInfo","ProjectInfo2","ProjectRelatedProjects","singleProjectHeader","singleProjectTitle","singleProjectDate","singleProjectTag","projectImages","id","title","img","require","projectInfo","clientHeading","companyInfos","details","objectivesHeading","objectivesDetails","technologies","techs","projectDetailsHeading","projectDetails","header","socialSharingsHeading","socialSharings","projectInfo2","relatedProject","relatedProjectsHeading","relatedProjects","replace"],"sources":["/Users/bill/mygit/web5page/src/views/lesson/StarknetPrinciple.vue"],"sourcesContent":["<script setup>\nimport { onMounted, onUpdated } from 'vue';\nimport feather from 'feather-icons';\nimport ProjectHeader from '../../components/web5Component/Web5Header.vue';\nimport ProjectInfo from '../../components/web5Component/Web5ProjectInfo.vue';\nimport ProjectInfo2 from '../../components/web5Component/Web5ProjectInfo2.vue';\nimport ProjectRelatedProjects from '../../components/projects/ProjectRelatedProjects.vue';\n\nconst singleProjectHeader = {\n  singleProjectTitle: 'Starknet 工作原理',\n  singleProjectDate: 'Jul 26, 2021',\n  singleProjectTag: 'zk / zk-STARKs',\n};\nconst projectImages = [\n  {\n    id: 1,\n    title: 'Kabul Project Management UI',\n    img: require('@/assets/images/ui-project-1.jpg'),\n  },\n  {\n    id: 2,\n    title: 'Kabul Project Management UI',\n    img: require('@/assets/images/web-project-2.jpg'),\n  },\n  {\n    id: 3,\n    title: 'Kabul Project Management UI',\n    img: require('@/assets/images/mobile-project-2.jpg'),\n  },\n];\n\nconst projectInfo = {\n  clientHeading: 'About Client',\n  companyInfos: [\n    { id: 1, title: 'Name', details: 'Company Ltd' },\n    { id: 2, title: 'Services', details: 'UI Design & Frontend Development' },\n    { id: 3, title: 'Website', details: 'https://company.com' },\n    { id: 4, title: 'Phone', details: '555 8888 888' },\n  ],\n  objectivesHeading: 'Objective',\n  objectivesDetails: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio, natus! Quibusdam enim quod in esse, mollitia molestias incidunt quas ipsa accusamus veniam.',\n  technologies: [\n    {\n      title: 'Tools & Technologies',\n      techs: ['HTML', 'CSS', 'JavaScript', 'Vue.js', 'TailwindCSS', 'AdobeXD'],\n    },\n  ],\n  projectDetailsHeading: 'Challenge',\n  projectDetails: [\n    {\n      id: 1,\n      header: \"什么是 Zk-Proofs\",\n      details: 'Zk-proofs 即 Zero-Knowledge Proofs 的缩写，中文称为零知识证明。零知识证明是一种方法，通过这种方法，一方可以向另一方证明给定的陈述是真实的，除了该陈述是真实的事实之外，无需透露任何其他信息。',\n    },\n    {\n      id: 2,\n      header: \"ZK-STARK 是什么\",\n      details: 'ZK-STARKs 是一个证明系统——两种算法之间的交互过程中允许区块链更加容易地验证计算的完整性，Verifier 和 Approver 双方可以通过交互来验证大量交易的完整性。',\n    },\n    {\n      id: 3,\n      header: \"ZK-Rollup VS OP-Rollup\",\n      details: 'OP-rollup 和 ZK-rollup 相比，ZK-rollup 则是一种比 OP-rollup 更加安全的替代方案，而 OP-rollup 则是具有 EVM 兼容性的 DeFi 项目的更好选择。由此可见，具备 EVM 兼容性的 ZK-rollup 以其天然的安全性的优势将会是 Layer2 的未来的叙事发展方向。安全性的实现这一优势要归功于 StarkNet 对最安全、最可扩展的密码学证明系统 — — STARK 的依赖。',\n    },\n    {\n      id: 4,\n      header: \"Zk-STARKs VS Zk-SNARKs\",\n      details: '选择使用 SNARKs 还是 STARKs 取决于具体的应用场景和需求。SNARKs 在证明大小和验证速度上有优势，但需要信任设置。而 STARKs 不需要信任设置，对量子计算机攻击有抵抗力，但证明较大，验证速度较慢。 zk-STARKs 却是一种不需要信任设置的零知识证明系统。与需要信任设置的系统（如 zk-SNARKs）不同，zk-STARKs 的证明生成和验证过程不依赖于任何秘密信息。这提供了更高的透明性和安全性，因为系统的安全性不依赖于任何特定个体或组织的行为。zk-STARKs 是通过使用一种被称为「FRI」（Fast Reed-Solomon Interactive Oracle Proofs）的技术实现的。',\n    },\n    {\n      id: 5,\n      header: \"FRI 协议\",\n      details: 'FRI 协议的基本思想是通过一系列的抽样和插值步骤，逐步降低多项式的度。在每一步，证明者都会提供一个新的多项式，并声称它是原始多项式的一个压缩版本。验证者可以通过检查这些多项式在随机点上的值，来验证这个声称是否正确。',\n    },\n  ],\n  socialSharingsHeading: '',\n  socialSharings: [\n\n  ],\n};\n\n\nconst projectInfo2 = {\n  clientHeading: 'About Client',\n  companyInfos: [\n\n  ],\n  objectivesHeading: 'Objective',\n  objectivesDetails: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio, natus! Quibusdam enim quod in esse, mollitia molestias incidunt quas ipsa accusamus veniam.',\n  technologies: [\n    {\n      title: 'Tools & Technologies',\n      techs: ['HTML', 'CSS', 'JavaScript', 'Vue.js', 'TailwindCSS', 'AdobeXD'],\n    },\n  ],\n  projectDetailsHeading: 'Starknet 工作原理',\n  projectDetails: [\n    {\n      id: 1,\n      details: '1. 用户发起交易，并将交易发送给 Squencer 进行验证、排序和执行，并打包批次。目前 StarkNet 系统中只有一个 StarkWare 官方掌握的 Sequencer，但 StarkWare 团队计划后续将 Squencer 去中心化；Squencer 通过 Cairo OS 来执行交易，扮演了 EVM 的角色。',\n    },\n    {\n      id: 2,\n      details: '2. Squencer 将执行交易的踪迹递交给 Prover，由 Prover 对计算完整性生成一个有效性证明。执行踪迹是生成 zkp 的核心，记录执行踪迹是 Cairo 语言的 zk 友好特性；这里的 Prover 也为 StarkEx 生成有效性证明，且可以聚合来自不同 StarkEx 应用和 StarkNet 的交易，实现共享。',\n    },\n    {\n      id: 3,\n      details: '3. Squencer 和 Prover 将有效性证明和全局状态变化发送给全节点进行记录。全节点基于 P2P 网络构建，负责记录整个 Layer2 网络的交易历史和以太坊主网上与 Layer2 相关的交易。',\n    },\n    {\n      id: 4,\n      details: '4. Prover 将有效性证明递交给主网上的 Verifier。Verifier 是部署在以太坊主网上的智能合约，负责收取并验证 Prover 提供的有效性证明。',\n    },\n    {\n      id: 5,\n      details: '5. Verifier 将验证过的结果发送至主网上的 StarkNet Core 合约进行记录和保存。StarkNet Core 合约部署在以太坊主网上，用于接收 Layer2 全局状态变化信息，包括状态哈希以及数据可用性；经过 Verifier 验证过的结果是一串状态哈希，由 Verifier 写入一笔新的 Layer1 交易，并传递给 Core 合约进行保存。',\n    },\n    {\n      id: 6,\n      details: '6. StarkNet Core 合约接收到验证结果（状态哈希）后，从 Layer2 接收「Call data」形式的数据可用性并保存。该数据会同步给 Layer2 的全节点进行解码，以保证全节点能够记录和重建 Layer2 的历史交易；在 Validium 方案中，StarkNet Core 合约不保存数据可用性，仅保存状态哈希。',\n    },\n  ],\n}\nconst relatedProject = {\n  relatedProjectsHeading: 'Related Projects',\n  relatedProjects: [\n    {\n      id: 1,\n      title: 'Mobile UI',\n      img: require('@/assets/images/starknet.jpg'),\n    },\n    {\n      id: 2,\n      title: 'Web Application',\n      img: require('@/assets/images/raas.jpg'),\n    },\n    {\n      id: 3,\n      title: 'UI Design',\n      img: require('@/assets/images/sui.jpg'),\n    },\n    {\n      id: 4,\n      title: 'Kabul Mobile App UI',\n      img: require('@/assets/images/mev.jpg'),\n    },\n  ],\n};\n\n\nonMounted(() => {\n  feather.replace();\n});\n\nonUpdated(() => {\n  feather.replace();\n});\n</script>\n\n<template>\n  <div class=\"container mx-auto mt-10 sm:mt-20\">\n    <!-- Project header -->\n    <ProjectHeader :singleProjectHeader=\"singleProjectHeader\" />\n\n    <!-- Project gallery -->\n<!--    <ProjectGallery :projectImages=\"projectImages\" />-->\n\n    <!-- Project information -->\n    <ProjectInfo :projectInfo=\"projectInfo\" />\n\n    <ProjectInfo2 :projectInfo=\"projectInfo2\" />\n\n    <div class=\"centered-container\">\n      <img class=\"centered-image\" src=\"@/assets/images/starketwork.png\">\n    </div>\n    <!-- Project related projects -->\n    <ProjectRelatedProjects :relatedProject=\"relatedProject\" />\n  </div>\n</template>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}